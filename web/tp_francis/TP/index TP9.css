
body{
    color: purple;
}

/*  pour forcer la priorité du style on ajoue  !important;   
a la  suite des attributs pour outrepasser les conflits*/
p{
    color: blue !important;
}

#para3{
    color: red;
}

strong{
    color: green;
}


/*On applique une couleur violette à notre élément body. 
Ainsi, tous les éléments contenus dans body vont hériter 
de cette couleur par défaut sauf si une autre couleur 
est définie entre temps. */




/*
Priorité et ordre en CSS

Cette notion d’héritage est très puissante et très pratique en CSS.

Cependant, il convient de bien comprendre dans quel ordre 
et selon quelle priorité s’appliquent les différents styles 
à un élément afin de ne pas faire d’erreur.

En CSS, si il y a un conflit, c’est-à-dire si un élément 
reçoit plusieurs fois une même propriété avec des valeurs
 différentes,le style qui va être prioritaire va être 
 le style le plus proche de l’élément.
 */


/* strong est plus pres que para3, qui lui-meme est plus pres que p 
qui est lui prioritaire sur body */

/*De même, il va y avoir un ordre de priorité selon où on va écrire notre code CSS.

Rappelez vous que l’on peut écrire le code CSS à trois endroits différents :

    Au sein de la balise ouvrante de chaque élément HTML, dans un attribut style ;
    Dans un élément style placé dans l’élément head d’un fichier HTML ;
    Dans un fichier CSS séparé.

Si on écrit le CSS à différents endroits, et si il y a un conflit, le style 
appliqué à l’élément directement (grâce à l’attribut style) sera prioritaire.

Ensuite, ce sera le style écrit dans l’élément HTML style qui sera retenu.

Finalement, le style écrit dans un fichier CSS séparé sera retenu en dernier.

Notez qu'on va pouvoir outrepasser cette notion d'ordre en ajoutant 
la mention "!important" à la fin d'une déclaration CSS 
qu'on veut imposer. */